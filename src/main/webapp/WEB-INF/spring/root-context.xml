<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 	xmlns:mvc="http://www.springframework.org/schema/mvc"
 	xmlns:context="http://www.springframework.org/schema/context"
 	xmlns:tx="http://www.springframework.org/schema/tx"
 	xsi:schemaLocation="http://www.springframework.org/schema/beans
	https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:property-placeholder location="classpath:application.properties" />
	<!-- 트랜잭션 관리를 수행하는 Aspect를 annotation 기반으로 사용 -->
	<tx:annotation-driven />
	
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>
	
	<bean id="ds" class="oracle.jdbc.pool.OracleDataSource">
		<property name="dataSourceName" value="ds"></property>
		<property name="URL" value="${database.url}"></property>
		<property name="user" value="${database.user}"></property>
		<property name="password" value="${database.password}"></property>
	</bean>
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation"
		value="classpath:/mybatis-config.xml" />
		<property name="mapperLocations"
		value="classpath:mappers/*.xml" />
	</bean>
	
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
		ref="sqlSessionFactory" />
	</bean>
	
	<!-- application.properties 파일을 읽어오는 설정 -->
	<context:property-placeholder location="classpath:application.properties" />
	
	<!-- 이메일 인증 관련 빈 등록 -->
  	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="smtp.gmail.com" />
    	<property name="port" value="587" />
    	<property name="username" value="${email.username}" />
    	<property name="password" value="${email.password}" />
    	<property name="javaMailProperties">
    		<props>
            	<prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key
                ="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
    	</property>      
	</bean>
	
</beans>
