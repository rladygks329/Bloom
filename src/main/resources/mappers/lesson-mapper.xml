<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.blooming.LessonMapper">

	<!-- 강의 영상을 추가 (lessonIndex 반영) -->
	<insert id="insert">
		insert into ${lesson}
		(${lectureId}, ${lessonName}, ${lessonUrl}, ${lessonIndex})
		values (#{lectureId}, #{lessonName}, #{lessonUrl}, #{lessonIndex})
		
		<!-- 입력후 lecture_Id를 리턴함 -->
		<selectKey keyProperty="lessonId" resultType="Integer" order="AFTER">
			SELECT LESSON_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<!-- 강의 영상을 업로드 (lessonIndex 미반영) -->
	<insert id="append">
		insert into ${lesson}
		(${lectureId}, ${lessonName}, ${lessonUrl})
		values (#{lectureId}, #{lessonName}, #{lessonUrl})
		
		<!-- 입력후 lecture_Id를 리턴함 -->
		<selectKey keyProperty="lessonId" resultType="Integer" order="AFTER">
			SELECT LESSON_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<!-- 강의 영상 수정 -->
	<update id="update">
		update ${lesson}
		set ${lessonName} = #{lessonName},
			${lessonUrl} = #{lessonUrl},
			${lessonIndex} = #{lessonIndex}
		where ${lessonId} = #{lessonId}
	</update>
	
	<!-- 강의 비디오 처리 단계 수정 -->
	<update id="update_video_processing_level">
		update ${lesson}
		set ${lessonVideoProcessingLevel} = #{level}
		where ${lessonId} = #{lessonId}
	</update>
	
	<!-- 강의 삭제 -->
	<delete id="delete">
		delete from ${lesson}
		where ${lessonId} = #{lessonId}
	</delete>
	
	<!-- lecture에서 가장 낮은 proccessing level을 가져옴 -->
	<select id="select_min_video_processing_level" resultType="Integer">
		select min(${lessonVideoProcessingLevel}) 
		from ${lesson}
		where ${lectureId} = #{lectureId}
	</select>
	
	<!-- 강의 조회 -->
	<select id="select_by_lesson_id" resultType="LessonVO">
		select * from ${lesson}
		where ${lessonId} = #{lessonId}
	</select>
	
	<!-- 강좌 목록을 조회 -->
	<select id="select_by_lecture_id" resultType="LessonVO">
		select * from ${lesson}
		where ${lectureId} = #{lectureId}
		order by ${lessonIndex}
	</select>
	
	<!-- 강좌 처리 상태를 가져옴 -->
	<select id="select_lesson_status" resultType="map">	
		select status.*, l.${lectureTitle}, l.${lectureId}
		from (
			select trunc(avg(lesson_video_processing_level), 2) proccess_rate, ${lectureId}
			from ${lesson}
			group by ${lectureId}
		) status join ${lecture} l on status.${lectureId} = l.${lectureId}
		where l.${memberId} = #{memberId} 
		order by l.${lectureId} desc
	</select>
	
</mapper>