<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.blooming.BoardMapper">
	
	<!-- 게시글 리스트 조회 -->
	<select id="paging" resultType="BoardVO">
		select
			b.${boardId},
			b.${boardTitle},
			b.${boardContent},
			m.${memberName} ${authorName},
			b.${boardDateCreated},
			b.${boardViewCount},
			b.${boardAnswerCount},
			b.${boardLikeCount}
		from (
			select rownum rn, a.* 
			from (
					select * 
					from ${board}
					where board_parent_id = 0
					order by ${boardId} desc
				 ) a
			 ) b left join ${member} m on b.${memberId} = m.${memberId}
		where rn between #{start} and #{end}		
	</select>
	
	<!-- 페이징처리: 게시글 총 개수 -->
	<select id="total_count" resultType="Integer">
		select count(*) total_cnt 
		from ${board}
		where board_parent_id = 0	
	</select>
	
	<!-- 게시글 조회 -->
	<select id="select_by_board_id" resultType="BoardVO">
		select 
			b.*, 
			m.${memberName} ${authorName}
		from ${board} b left join ${member} m on b.${memberId} = m.${memberId}
		where b.${boardId} = #{boardId} or b.${boardParentId} = #{boardId}
	</select>	
	
	<!-- 게시글 수정: 불러오기 -->
	<select id="select_by_board_id_for_update" resultType="BoardVO">
		select * 
		from ${board}
		where ${boardId} = #{boardId} 	
	</select>
	
	<!-- 게시글 수정 -->
	<update id="update">
		update ${board}
	 	set ${boardTitle} = #{boardTitle}, ${boardContent} = #{boardContent} 
	 	where ${boardId} = #{boardId}	
	</update>
	
	<!-- 게시글 등록 -->
	<insert id="insert">
		insert into ${board}
		(${memberId}, ${boardParentId}, ${boardTitle}, ${boardContent})
		values (#{memberId}, #{boardParentId}, #{boardTitle}, #{boardContent})		
	</insert>
	
	<!-- 게시글 댓글 갯수 수정 -->
	<update id="update_reply_count">
		update ${board}
		set ${boardReplyCount} = ${boardReplyCount} + #{amount}
		where ${boardId} = #{boardId}	
	</update>
	
	<!-- 게시글 조회수 -->
	<update id="update_view_count">
		update ${board}
		set ${boardViewCount} = ${boardViewCount} + 1
		where ${boardId} = #{boardId}
	</update>
	
	<!-- 게시글 좋아요 -->
	<insert id="insert_board_like">
		insert into ${board_like}
		(${boardId}, ${memberId})
		values(#{boardId}, #{memberId})
	</insert>
	 
	<!-- 게시글 좋아요 취소 -->
	<delete id="delete_board_like">
		delete from ${board_like}
		where ${boardId} = #{boardId} and ${memberId} = #{memberId} 
	</delete>
	
	<!-- 게시글 좋아요 갯수 수정 -->
	<update id="update_like">
		update ${board}
		set ${boardLikeCount} = ${boardLikeCount} + #{amount}
		where ${boardId} = #{boardId}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 우선 기존에 있는 boardId로 조회 and 등록하는 쿼리로 가능한지 해보기-->
	<!-- 게시글 답글 등록시 답글 불러오기 -->
	<select id="select_all_asnwer_by_boardParent_id">
		select * from ${board}
		where ${boardParentId} = #{boardId}
		order by ${boardId}	
	</select>





</mapper>