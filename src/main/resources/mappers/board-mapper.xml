<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.blooming.BoardMapper">
	
	<!-- 게시글 리스트 조회 -->
	<select id="paging" resultType="BoardVO">
		select
			b.${boardId},
			b.${boardTitle},
			b.${boardContent},
			m.${memberNickname} ${authorNickname},
			b.${boardDateCreated},
			b.${boardViewCount},
			b.${boardReplyCount},
			b.${boardLikeCount}
		from (
			select rownum rn, a.* 
			from (
					select * 
					from ${board}					
					order by ${boardId} desc
				 ) a
			 ) b left join ${member} m on b.${memberId} = m.${memberId}
		where rn between #{start} and #{end}	
	</select>
	
	<!-- 페이징처리: 게시글 총 개수 -->
	<select id="total_count" resultType="Integer">
		select count(*) total_cnt 
		from ${board}			
	</select>
	
	<!-- 특정 게시글 조회 -->
	<select id="select_by_board_id" resultType="BoardVO">
		select 
			b.*, 
			m.${memberNickname} ${authorNickname}
		from ${board} b left join ${member} m on b.${memberId} = m.${memberId}
		where b.${boardId} = #{boardId}
	</select>	
	
	<!-- 게시글 수정: 불러오기 부분이었는데 위쪽걸로 써도 되는지 확인 
	<select id="select_by_board_id_for_update" resultType="BoardVO">
		select * 
		from ${board}
		where ${boardId} = #{boardId} 	
	</select>
	-->
	
	<!-- 게시글 수정 -->
	<update id="update">
		update ${board}
	 	set ${boardTitle} = #{boardTitle}, ${boardContent} = #{boardContent} 
	 	where ${boardId} = #{boardId}	
	</update>
	
	<!-- 게시글 등록 -->
	<insert id="insert">
		insert into ${board}
		(${memberId}, ${boardTitle}, ${boardContent})
		values (#{memberId}, #{boardTitle}, #{boardContent})		
	</insert>
	
	<!-- 게시글 댓글 갯수 수정 -->
	<update id="update_reply_count">
		update ${board}
		set ${boardReplyCount} = ${boardReplyCount} + #{amount}
		where ${boardId} = #{boardId}	
	</update>
	
	<!-- 게시글 조회수 -->
	<update id="update_view_count">
		update ${board}
		set ${boardViewCount} = ${boardViewCount} + 1
		where ${boardId} = #{boardId}
	</update>
	
	<!-- 특정 멤버의 게시글 좋아요 클릭 확인 -->
	 <select id="select_is_member_like_board" resultType="Integer">
	 	select count(*)
	 	from ${board_like} a join ${board} b on a.${boardId} = b.${boardId}  
	 	where a.${boardId} = #{boardId} and a.${memberId} = #{memberId}
	 </select>	
		
	<!-- 게시글 좋아요 -->
	<insert id="insert_board_like">
		insert into ${board_like}
		(${boardId}, ${memberId})
		values(#{boardId}, #{memberId})
	</insert>
	 
	<!-- 게시글 좋아요 취소 -->
	<delete id="delete_board_like">
		delete from ${board_like}
		where ${boardId} = #{boardId} and ${memberId} = #{memberId} 
	</delete>
	
	<!-- 게시글 좋아요 갯수 수정 -->
	<update id="update_like">
		update ${board}
		set ${boardLikeCount} = ${boardLikeCount} + #{amount}
		where ${boardId} = #{boardId}
	</update>
	
	<!-- 1. 보드에서 키워드로 타이틀, 내용 추려서 고르고
		2. 1번 + rownum rn 이라는 컬럼 붙여서 고르고(b)
		3. 여기에 조인으로 member테이블에 memberid 로 붙여서 member테이블까지 가져오고
		4. 여기서 b만 다시 쏙 뺴고 + member테이블 붙인거에서 nickname만 가져오기 -->
	<!-- 게시글 검색 PageNation: 제목, 내용 -->
	<select id="paging_select_by_keyword" resultType="BoardVO">
		select b.*, m.${memberNickname} ${authorNickname}
		from (
			select rownum rn, a.* 
			from (
					select * 
					from ${board}
					where ${boardTitle} like #{keyword} or ${boardContent} like #{keyword}
					order by ${boardId} desc
				) a
			) b join ${member} m on b.${memberId} = m.${memberId}
		where rn between #{start} and #{end}
	</select>
		
	<!-- 게시글 개수 페이징처리: 제목,내용 -->
	<select id="total_count_by_title_content" resultType="Integer">
		select count(*) total_cnt 
		from ${board}
		where ${boardTitle} like #{keyword} or ${boardContent} like #{keyword}		
	</select>
	
	<!-- 게시글 검색 PageNation: 멤버 -->
	<select id="paging_select_by_nickname" resultType="boardVO">
		select c.*, m.${memberNickname} ${authorNickname}
		from (
			select rownum rn, a.* 
			from (
					select b.*, m.${memberNickname}
					from ${board} b
					join ${member} m on b.{memberId} = m.${memberId}
					where ${memberNickname} like #{keyword} 
					order by ${boardId} desc
				) a
			) c
		where rn between #{start} and #{end}
	</select>
	
	<!-- 게시글 개수 페이징처리: 멤버 -->
	<select id="total_count_by_nickname" resultType="Integer">
		select count(*) total_cnt 
		from (
				select b.*, m.${memberNickname}
				from ${board} b
				join ${member} m on b.{memberId} = m.${memberId}
				where ${memberNickname} like #{keyword}
			)
	</select>	
	
	<!-- 게시글 삭제 -->
	<!-- 추가하기 -->

</mapper>

