<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.blooming.LectureMapper">
	
	<!-- 강좌 추가 -->
	<insert id="insert">
		insert into ${lecture}
		(${memberId}, ${lectureTitle}, ${lecturePrice})
		values (#{memberId}, #{lectureTitle}, #{lecturePrice})
	</insert>

	<!-- 강좌 정보 수정 -->	
	<update id="update">
		update ${lecture}
		set ${lectureTitle} = #{lectureTitle},
			${lecturePrice} = #{lecturePrice}
		where ${lectureId} = #{lectureId}
	</update>
	
	<!-- 강좌 좋아요 갯수 수정 -->
	<update id="update_like">
		update ${lecture}
		set ${lectureLikeCount} = ${lectureLikeCount} + #{amount}
		where ${lectureId} = #{lectureId}
	</update>
	
	<!-- 강좌 판매량 갯수 수정 -->
	<update id="update_sales_count">
		update ${lecture}
		set ${lectureSalesCount} = ${lectureSalesCount} + #{amount}
		where ${lectureId} = #{lectureId}
	</update>
	
	<!-- 강좌 평가 갯수 수정 -->
	<update id="update_reply_count">
		update ${lecture}
		set ${lectureReplyCount} = ${lectureReplyCount} + #{amount}
		where ${lectureId} = #{lectureId}
	</update>
	
	<!-- 강좌 좋아요 갯수 수정 -->
	<update id="update_total_score">
		update ${lecture}
		set ${lectureTotalScore} = ${lectureTotalScore} + #{amount}
		where ${lectureId} = #{lectureId}
	</update>
		
	<!-- 특정 강사의 강의 조회 pagenation-->
	<select id="paging_select_by_member_id" resultType="LectureVO">
		select 
			${lectureId}, ${memberId}, ${lectureTitle}, ${lecturePrice}, ${lectureSalesCount},
			${lectureTotalScore}, ${lectureReplyCount}, ${lectureLikeCount}, ${lectureDateCreated} 
		from (
			select rownum rn, a.* 
			from (
					select * 
					from ${lecture} 
					where ${memberId} = #{memberId}
					order by ${lectureId} desc
				) a
			) 
		where rn between #{start} and #{end}	
	</select>
	
	<!-- 강좌 조회 PageNation -->
	<select id="paing_select" resultType="LectureVO">
		select 
			${lectureId}, ${memberId}, ${lectureTitle}, ${lecturePrice}, ${lectureSalesCount},
			${lectureTotalScore}, ${lectureReplyCount}, ${lectureLikeCount}, ${lectureDateCreated} 
		from (
			select rownum rn, a.* 
			from (
					select * 
					from ${lecture} 
					order by ${lectureId} desc
				) a
			) 
		where rn between #{start} and #{end}
	
	</select>
	
	<!-- 페이지 네이션을 위한 전체 강의 수 조회 -->
	<select id="total_count" resultType="Integer">
		select count(${lectureId})
		from ${lecture}	
	</select>
	
	<!-- 페이지 네이션을 위한 특정 강사 강의 수 조회 -->
	<select id="member_lecture_count" resultType="Integer">
		select count(${lectureId})
		from ${lecture}	
		where ${memberId} = #{memberId}
	</select>
	 
</mapper>